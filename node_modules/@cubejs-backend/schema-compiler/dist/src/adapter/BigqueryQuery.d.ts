import { BaseQuery } from './BaseQuery';
export declare class BigqueryQuery extends BaseQuery {
    convertTz(field: any): string;
    timeStampCast(value: any): string;
    dateTimeCast(value: any): string;
    escapeColumnName(name: any): string;
    timeGroupedColumn(granularity: any, dimension: any): string;
    newFilter(filter: any): any;
    dateSeriesSql(timeDimension: any): string;
    seriesSql(timeDimension: any): string;
    overTimeSeriesSelect(cumulativeMeasures: any, dateSeriesSql: any, baseQuery: any, dateJoinConditionSql: any, baseQueryAlias: any): string;
    subtractInterval(date: any, interval: any): string;
    addInterval(date: any, interval: any): string;
    subtractTimestampInterval(date: any, interval: any): string;
    addTimestampInterval(date: any, interval: any): string;
    nowTimestampSql(): string;
    unixTimestampSql(): string;
    preAggregationLoadSql(cube: any, preAggregation: any, tableName: any): any;
    hllInit(sql: any): string;
    hllMerge(sql: any): string;
    countDistinctApprox(sql: any): string;
    concatStringsSql(strings: any): string;
    defaultRefreshKeyRenewalThreshold(): number;
    defaultEveryRefreshKey(): {
        every: string;
    };
    sqlTemplates(): any;
}
//# sourceMappingURL=BigqueryQuery.d.ts.map
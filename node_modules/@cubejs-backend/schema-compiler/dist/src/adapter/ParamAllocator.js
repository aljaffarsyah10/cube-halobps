"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParamAllocator = void 0;
const PARAMS_MATCH_REGEXP = /\$(\d+)\$/g;
class ParamAllocator {
    constructor(expressionParams) {
        this.params = expressionParams || [];
    }
    allocateParamsForQuestionString(sql, paramArray) {
        let paramIndex = 0;
        return sql.replace(/\?/g, () => this.allocateParam(paramArray[paramIndex++]));
    }
    hasParametersInSql(sql) {
        return sql.match(PARAMS_MATCH_REGEXP) !== null;
    }
    buildSqlAndParams(annotatedSql, exportAnnotatedSql) {
        const paramsInSqlOrder = [];
        return [
            annotatedSql.replace(PARAMS_MATCH_REGEXP, (match, paramIndex) => {
                paramsInSqlOrder.push(this.params[paramIndex]);
                return exportAnnotatedSql ? `$${paramsInSqlOrder.length - 1}$` : this.paramPlaceHolder(paramsInSqlOrder.length - 1);
            }),
            paramsInSqlOrder
        ];
    }
    allocateParam(param) {
        const paramIndex = this.params.length;
        this.params.push(param);
        return `$${paramIndex}$`;
    }
    // eslint-disable-next-line no-unused-vars
    paramPlaceHolder(paramIndex) {
        return '?';
    }
}
exports.ParamAllocator = ParamAllocator;
//# sourceMappingURL=ParamAllocator.js.map
import type { BaseQuery } from './BaseQuery';
export declare class BaseSegment {
    protected readonly query: BaseQuery;
    readonly segment: string | any;
    readonly expression: any;
    readonly expressionCubeName: any;
    readonly expressionName: any;
    readonly isMemberExpression: boolean;
    constructor(query: BaseQuery, segment: string | any);
    filterToWhere(): any;
    segmentSql(): any;
    filterParams(): never[];
    segmentDefinition(): import("../compiler/CubeEvaluator").SegmentDefinition;
    definition(): import("../compiler/CubeEvaluator").SegmentDefinition | {
        sql: any;
    };
    getMembers(): this[];
    cube(): any;
    sqlDefinition(): Function;
    path(): any;
    expressionPath(): any;
}
//# sourceMappingURL=BaseSegment.d.ts.map
import { BaseQuery } from './BaseQuery';
import { BaseTimeDimension } from './BaseTimeDimension';
export declare class ClickHouseQuery extends BaseQuery {
    newFilter(filter: any): any;
    escapeColumnName(name: any): string;
    convertTz(field: any): string;
    timeGroupedColumn(granularity: any, dimension: any): string;
    calcInterval(operation: any, date: any, interval: any): string;
    subtractInterval(date: any, interval: any): string;
    addInterval(date: any, interval: any): string;
    timeStampCast(value: any): string;
    dateTimeCast(value: any): string;
    dimensionsJoinCondition(leftAlias: any, rightAlias: any): string;
    getFieldAlias(id: any): any;
    orderHashToString(hash: any): string | null;
    groupByClause(): string;
    primaryKeyCount(cubeName: any, distinct: any): string;
    castToString(sql: any): string;
    seriesSql(timeDimension: BaseTimeDimension): string;
    concatStringsSql(strings: any): string;
    unixTimestampSql(): string;
    preAggregationLoadSql(cube: any, preAggregation: any, tableName: any): any[];
    createIndexSql(indexName: any, tableName: any, escapedColumns: any): string;
    sqlTemplates(): any;
}
//# sourceMappingURL=ClickHouseQuery.d.ts.map
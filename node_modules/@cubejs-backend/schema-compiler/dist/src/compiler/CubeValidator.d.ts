import Joi from 'joi';
import type { CubeSymbols } from './CubeSymbols';
import type { ErrorReporter } from './ErrorReporter';
export declare const nonStringFields: Set<string>;
export declare function functionFieldsPatterns(): string[];
export declare class CubeValidator {
    protected readonly cubeSymbols: CubeSymbols;
    protected readonly validCubes: Map<string, boolean>;
    constructor(cubeSymbols: CubeSymbols);
    compile(cubes: any, errorReporter: ErrorReporter): Joi.ValidationResult<any>[];
    validate(cube: any, errorReporter: ErrorReporter): Joi.ValidationResult<any>;
    isCubeValid(cube: any): any;
}
//# sourceMappingURL=CubeValidator.d.ts.map
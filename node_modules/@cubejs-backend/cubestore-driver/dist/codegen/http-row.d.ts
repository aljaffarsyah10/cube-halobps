import * as flatbuffers from 'flatbuffers';
import { HttpColumnValue } from './http-column-value.js';
export declare class HttpRow {
    bb: flatbuffers.ByteBuffer | null;
    bb_pos: number;
    __init(i: number, bb: flatbuffers.ByteBuffer): HttpRow;
    static getRootAsHttpRow(bb: flatbuffers.ByteBuffer, obj?: HttpRow): HttpRow;
    static getSizePrefixedRootAsHttpRow(bb: flatbuffers.ByteBuffer, obj?: HttpRow): HttpRow;
    values(index: number, obj?: HttpColumnValue): HttpColumnValue | null;
    valuesLength(): number;
    static startHttpRow(builder: flatbuffers.Builder): void;
    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset): void;
    static createValuesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset;
    static startValuesVector(builder: flatbuffers.Builder, numElems: number): void;
    static endHttpRow(builder: flatbuffers.Builder): flatbuffers.Offset;
    static createHttpRow(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset): flatbuffers.Offset;
}
//# sourceMappingURL=http-row.d.ts.map
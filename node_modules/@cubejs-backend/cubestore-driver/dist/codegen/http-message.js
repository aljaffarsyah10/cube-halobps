"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpMessage = void 0;
const flatbuffers = __importStar(require("flatbuffers"));
const http_command_js_1 = require("./http-command.js");
class HttpMessage {
    constructor() {
        this.bb = null;
        this.bb_pos = 0;
    }
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsHttpMessage(bb, obj) {
        return (obj || new HttpMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsHttpMessage(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new HttpMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    messageId() {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    }
    commandType() {
        const offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : http_command_js_1.HttpCommand.NONE;
    }
    command(obj) {
        const offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
    }
    connectionId(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    static startHttpMessage(builder) {
        builder.startObject(4);
    }
    static addMessageId(builder, messageId) {
        builder.addFieldInt32(0, messageId, 0);
    }
    static addCommandType(builder, commandType) {
        builder.addFieldInt8(1, commandType, http_command_js_1.HttpCommand.NONE);
    }
    static addCommand(builder, commandOffset) {
        builder.addFieldOffset(2, commandOffset, 0);
    }
    static addConnectionId(builder, connectionIdOffset) {
        builder.addFieldOffset(3, connectionIdOffset, 0);
    }
    static endHttpMessage(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static finishHttpMessageBuffer(builder, offset) {
        builder.finish(offset);
    }
    static finishSizePrefixedHttpMessageBuffer(builder, offset) {
        builder.finish(offset, undefined, true);
    }
    static createHttpMessage(builder, messageId, commandType, commandOffset, connectionIdOffset) {
        HttpMessage.startHttpMessage(builder);
        HttpMessage.addMessageId(builder, messageId);
        HttpMessage.addCommandType(builder, commandType);
        HttpMessage.addCommand(builder, commandOffset);
        HttpMessage.addConnectionId(builder, connectionIdOffset);
        return HttpMessage.endHttpMessage(builder);
    }
}
exports.HttpMessage = HttpMessage;
//# sourceMappingURL=http-message.js.map
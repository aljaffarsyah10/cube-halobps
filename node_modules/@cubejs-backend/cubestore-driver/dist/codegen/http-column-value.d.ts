import * as flatbuffers from 'flatbuffers';
export declare class HttpColumnValue {
    bb: flatbuffers.ByteBuffer | null;
    bb_pos: number;
    __init(i: number, bb: flatbuffers.ByteBuffer): HttpColumnValue;
    static getRootAsHttpColumnValue(bb: flatbuffers.ByteBuffer, obj?: HttpColumnValue): HttpColumnValue;
    static getSizePrefixedRootAsHttpColumnValue(bb: flatbuffers.ByteBuffer, obj?: HttpColumnValue): HttpColumnValue;
    stringValue(): string | null;
    stringValue(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    static startHttpColumnValue(builder: flatbuffers.Builder): void;
    static addStringValue(builder: flatbuffers.Builder, stringValueOffset: flatbuffers.Offset): void;
    static endHttpColumnValue(builder: flatbuffers.Builder): flatbuffers.Offset;
    static createHttpColumnValue(builder: flatbuffers.Builder, stringValueOffset: flatbuffers.Offset): flatbuffers.Offset;
}
//# sourceMappingURL=http-column-value.d.ts.map
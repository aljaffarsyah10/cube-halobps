"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.unionListToHttpCommand = exports.unionToHttpCommand = exports.HttpCommand = void 0;
const http_error_js_1 = require("./http-error.js");
const http_query_js_1 = require("./http-query.js");
const http_result_set_js_1 = require("./http-result-set.js");
var HttpCommand;
(function (HttpCommand) {
    HttpCommand[HttpCommand["NONE"] = 0] = "NONE";
    HttpCommand[HttpCommand["HttpQuery"] = 1] = "HttpQuery";
    HttpCommand[HttpCommand["HttpResultSet"] = 2] = "HttpResultSet";
    HttpCommand[HttpCommand["HttpError"] = 3] = "HttpError";
})(HttpCommand || (exports.HttpCommand = HttpCommand = {}));
function unionToHttpCommand(type, accessor) {
    switch (HttpCommand[type]) {
        case 'NONE': return null;
        case 'HttpQuery': return accessor(new http_query_js_1.HttpQuery());
        case 'HttpResultSet': return accessor(new http_result_set_js_1.HttpResultSet());
        case 'HttpError': return accessor(new http_error_js_1.HttpError());
        default: return null;
    }
}
exports.unionToHttpCommand = unionToHttpCommand;
function unionListToHttpCommand(type, accessor, index) {
    switch (HttpCommand[type]) {
        case 'NONE': return null;
        case 'HttpQuery': return accessor(index, new http_query_js_1.HttpQuery());
        case 'HttpResultSet': return accessor(index, new http_result_set_js_1.HttpResultSet());
        case 'HttpError': return accessor(index, new http_error_js_1.HttpError());
        default: return null;
    }
}
exports.unionListToHttpCommand = unionListToHttpCommand;
//# sourceMappingURL=http-command.js.map
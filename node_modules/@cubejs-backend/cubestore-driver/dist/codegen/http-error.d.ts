import * as flatbuffers from 'flatbuffers';
export declare class HttpError {
    bb: flatbuffers.ByteBuffer | null;
    bb_pos: number;
    __init(i: number, bb: flatbuffers.ByteBuffer): HttpError;
    static getRootAsHttpError(bb: flatbuffers.ByteBuffer, obj?: HttpError): HttpError;
    static getSizePrefixedRootAsHttpError(bb: flatbuffers.ByteBuffer, obj?: HttpError): HttpError;
    error(): string | null;
    error(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    static startHttpError(builder: flatbuffers.Builder): void;
    static addError(builder: flatbuffers.Builder, errorOffset: flatbuffers.Offset): void;
    static endHttpError(builder: flatbuffers.Builder): flatbuffers.Offset;
    static createHttpError(builder: flatbuffers.Builder, errorOffset: flatbuffers.Offset): flatbuffers.Offset;
}
//# sourceMappingURL=http-error.d.ts.map
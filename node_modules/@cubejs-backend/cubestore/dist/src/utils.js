"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isCubeStoreSupported = exports.getTarget = void 0;
const process_1 = __importDefault(require("process"));
const shared_1 = require("@cubejs-backend/shared");
function getTarget() {
    if (process_1.default.arch === 'x64') {
        switch (process_1.default.platform) {
            case 'win32':
                return 'x86_64-pc-windows-msvc';
            case 'linux':
                return `x86_64-unknown-linux-${(0, shared_1.detectLibc)()}`;
            case 'darwin':
                return 'x86_64-apple-darwin';
            default:
                throw new Error(`You are using ${process_1.default.env} platform on x86 which is not supported by Cube Store`);
        }
    }
    if (process_1.default.arch === 'arm64') {
        switch (process_1.default.platform) {
            case 'linux':
                switch ((0, shared_1.detectLibc)()) {
                    case 'gnu':
                        return 'aarch64-unknown-linux-gnu';
                    default:
                        throw new Error(`You are using ${process_1.default.env} platform on arm64 with MUSL as standard library which is not supported by Cube Store, please use libc (GNU)`);
                }
            case 'darwin':
                // Rosetta 2 is required
                return 'x86_64-apple-darwin';
            default:
                throw new Error(`You are using ${process_1.default.env} platform on arm64 which is not supported by Cube Store`);
        }
    }
    throw new Error(`You are using ${process_1.default.arch} architecture on ${process_1.default.platform} platform which is not supported by Cube Store`);
}
exports.getTarget = getTarget;
function isCubeStoreSupported() {
    if (process_1.default.arch === 'x64') {
        return ['win32', 'darwin', 'linux'].includes(process_1.default.platform);
    }
    if (process_1.default.arch === 'arm64') {
        // We mark darwin as supported, but it uses Rosetta 2
        if (process_1.default.platform === 'darwin') {
            return true;
        }
        return process_1.default.platform === 'linux' && (0, shared_1.detectLibc)() === 'gnu';
    }
    return false;
}
exports.isCubeStoreSupported = isCubeStoreSupported;
//# sourceMappingURL=utils.js.map